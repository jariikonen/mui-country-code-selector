{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.43.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "mui-country-code-selector!",
  "docComment": "",
  "name": "mui-country-code-selector",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "mui-country-code-selector!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps:interface",
          "docComment": "/**\n * Represents the props of the `CountryCodeSelectorCombined` components.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface CCSelectorCombinedProps "
            }
          ],
          "fileUrlPath": "component/types/CCSelectorCombinedProps.ts",
          "releaseTag": "Alpha",
          "name": "CCSelectorCombinedProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#countryCodeLabel:member",
              "docComment": "/**\n * Label for the country code selector input element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countryCodeLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "countryCodeLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#defaultValue:member",
              "docComment": "/**\n * A default phone number value. Provide this if you wish to set the default value when using the component as an uncontrolled component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultValue?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "defaultValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#errorMessageDelay:member",
              "docComment": "/**\n * Defines how long the error message is displayed in seconds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMessageDelay?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "errorMessageDelay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#errorMessageDisplay:member",
              "docComment": "/**\n * Determines how the error message is displayed. When set to `both`, error is displayed both as an error status of the component and by displaying an error message. When set to `none` neither is displayed. Prop can also be set as `message` or `status` in which case the corresponding method is used to indicate the error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMessageDisplay?: "
                },
                {
                  "kind": "Content",
                  "text": "'none' | 'message' | 'status' | 'both'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "errorMessageDisplay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#errorProps:member",
              "docComment": "/**\n * Props applied to the FormHelperText component of the combined country code selector component (a possible error message). See {@link https://mui.com/material-ui/api/form-helper-text/} for more information about the MUI's FormHelperText's API.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FormHelperTextProps",
                  "canonicalReference": "@mui/material!FormHelperTextProps:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "errorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#errorSize:member",
              "docComment": "/**\n * Sets the breakpoint size props of the error message components grid item, when the country code components are wrapped in a MUI Grid or MUI Grid2. Accepts an object with keys for MUI's responsive breakpoints (xs, sm, md, lg, and xl), and the values can be either a number, a string 'auto' or a boolean. If the value for a breakpoint is false the prop is ignored.\n *\n * See {@link https://mui.com/material-ui/api/grid/#props} (e.g., {@link https://mui.com/material-ui/api/grid/#grid-prop-xs}) for more information about the MUI Grid props, and {@link https://mui.com/material-ui/customization/breakpoints/} for more information about MUI's responsive breakpoints.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorSize?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "errorSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#filterOptions:member",
              "docComment": "/**\n * Custom options for setting how the select options are filtered based on the input. See {@link https://mui.com/material-ui/api/autocomplete/#autocomplete-prop-filterOptions} and {@link https://mui.com/material-ui/react-autocomplete/#custom-filter} for more information about custom filtering.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filterOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CountryType",
                  "canonicalReference": "mui-country-code-selector!CountryType:interface"
                },
                {
                  "kind": "Content",
                  "text": "[], state: "
                },
                {
                  "kind": "Reference",
                  "text": "FilterOptionsState",
                  "canonicalReference": "@mui/base!FilterOptionsState:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CountryType",
                  "canonicalReference": "mui-country-code-selector!CountryType:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => "
                },
                {
                  "kind": "Reference",
                  "text": "CountryType",
                  "canonicalReference": "mui-country-code-selector!CountryType:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "filterOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#formGroupProps:member",
              "docComment": "/**\n * Props passed to the MUI FormGroup component if the country code components are wrapped in one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formGroupProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FormGroupProps",
                  "canonicalReference": "@mui/material!FormGroupProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "formGroupProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#grid2ContainerProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid2 container component if the country code components are wrapped in one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2ContainerProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ContainerProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ContainerProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2ContainerProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#grid2ErrorProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid2 item component that the error message component is wrapped in, if the country code components are wrapped in a Grid2. Overwrites the `grid2ItemProps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2ErrorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2ErrorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#grid2InputProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid2 item component that the phone number input component is wrapped in, if the country code components are wrapped in a Grid2. Overwrites the `grid2ItemProps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2InputProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2InputProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#grid2ItemProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid2 item components if the country code components are wrapped in such. Is overwritten by `grid2SelectorProps` and `grid2InputProps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2ItemProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2ItemProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#grid2SelectorProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid2 item component that the selector component is wrapped in, if the country code components are wrapped in a Grid2. Overwrites the `grid2ItemProps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2SelectorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2SelectorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#gridContainerProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid container component if the country code components are wrapped in one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridContainerProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridContainerProps",
                  "canonicalReference": "mui-country-code-selector!GridContainerProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridContainerProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#gridErrorProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid item component that the error message component is wrapped in, if the country code components are wrapped in a Grid. Overwrites the `gridItemProps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridErrorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridErrorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#gridInputProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid item component that the phone number input component is wrapped in, if the country code components are wrapped in a Grid. Overwrites the `gridItemProps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridInputProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridInputProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#gridItemProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid item components if the country code components are wrapped in such. Is overwritten by `gridSelectorProps` and `gridInputProps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridItemProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridItemProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#gridSelectorProps:member",
              "docComment": "/**\n * Props passed to the MUI Grid item component that the selector component is wrapped in, if the country code components are wrapped in a Grid. Overwrites the `gridItemProps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridSelectorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridSelectorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#id:member",
              "docComment": "/**\n * The global HTML `id` attribute passed to the input subcomponent of the combined component. Defines an identifier which must be unique in the whole document. See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id} for more information.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#inputProps:member",
              "docComment": "/**\n * Props applied to the underlying TextField component (the phone number input). See {@link https://mui.com/material-ui/api/text-field/} for more information about the MUI's TextField's API.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TextFieldProps",
                  "canonicalReference": "@mui/material!TextFieldProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", 'onChange' | 'select' | 'SelectProps' | 'value'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "inputProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#inputRef:member",
              "docComment": "/**\n * A React ref that will be set to point to the phone number input element. Provide this to access the component's value when using the component as an uncontrolled component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "MutableRefObject",
                  "canonicalReference": "@types/react!React.MutableRefObject:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLInputElement",
                  "canonicalReference": "!HTMLInputElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "inputRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#inputRenderCountRef:member",
              "docComment": "/**\n * Passes a numeric React ref object to the phone number input component, which is then increased by one every time the component is rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputRenderCountRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "MutableRefObject",
                  "canonicalReference": "@types/react!React.MutableRefObject:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "inputRenderCountRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#inputSize:member",
              "docComment": "/**\n * Sets the breakpoint size props of the phone number input components grid item, when the country code components are wrapped in a MUI Grid or MUI Grid2. Accepts an object with keys for MUI's responsive breakpoints (xs, sm, md, lg, and xl), and the values can be either a number, a string 'auto' or a boolean. If the value for a breakpoint is false the prop is ignored.\n *\n * See {@link https://mui.com/material-ui/api/grid/#props} (e.g., {@link https://mui.com/material-ui/api/grid/#grid-prop-xs}) for more information about the MUI Grid props, and {@link https://mui.com/material-ui/customization/breakpoints/} for more information about MUI's responsive breakpoints.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputSize?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "inputSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#layout:member",
              "docComment": "/**\n * Defines what kind of layout components the subcomponents of a combined component are wrapped in. Accepts the following values: `grid`, `gridItems`, `grid2`, `grid2Items`, `stack`, and `group`. Option `grid` wraps the components into MUI Grid item components and creates a Grid container around them. Option `gridItems` just wraps the components into Grid items and leaves the container out. Options `grid2` and `grid2Items` do the same with MUI Grid2 components. Option `stack` wraps the components in a MUI Stack component, and with the `group` option the components are wrapped in a MUI FormGroup component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layout?: "
                },
                {
                  "kind": "Reference",
                  "text": "LayoutProp",
                  "canonicalReference": "mui-country-code-selector!LayoutProp:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "layout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#name:member",
              "docComment": "/**\n * An HTML `name` attribute passed to the input subcomponent of the combined component. Name attribute is a string specifying a name for the input. This name is submitted along with the control's value when the form data is submitted. See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name} for more information.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#onChange:member",
              "docComment": "/**\n * Phone number input's change event handler. Sets the `value` prop. Provide this when you wish to use the component as a controlled component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChange?: "
                },
                {
                  "kind": "Content",
                  "text": "(e: {\n        target: {\n            value: string;\n        };\n    }) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "onChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#onError:member",
              "docComment": "/**\n * Passes a custom function for handling errors. The function receives the error message as a parameter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onError?: "
                },
                {
                  "kind": "Content",
                  "text": "(error: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "onError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#phoneNumberLabel:member",
              "docComment": "/**\n * Label for the phone number input element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "phoneNumberLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "phoneNumberLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#selectorProps:member",
              "docComment": "/**\n * Props applied to the underlying CountryCodeSelector element. See {@link https://mui.com/material-ui/api/autocomplete/} for more information about MUI's Autocomplete's API.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CCSelectorProps",
                  "canonicalReference": "mui-country-code-selector!CCSelectorProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "selectorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#selectorRenderCountRef:member",
              "docComment": "/**\n * Passes a numeric React ref object to the selector component, which is then increased by one every time the component is rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectorRenderCountRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "MutableRefObject",
                  "canonicalReference": "@types/react!React.MutableRefObject:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "selectorRenderCountRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#selectorSize:member",
              "docComment": "/**\n * Sets the breakpoint size props of the selector components grid item, when the `grid` or `grid2` layout is used. Accepts an object with keys for MUI's responsive breakpoints (`xs`, `sm`, `md`, `lg`, and `xl`), and the values can be either a number, string `auto` or a boolean. If the value for a breakpoint is `false` the prop is ignored.\n *\n * See {@link https://mui.com/material-ui/api/grid/#props} (e.g., {@link https://mui.com/material-ui/api/grid/#grid-prop-xs}) for more information about the MUI Grid props, and {@link https://mui.com/material-ui/customization/breakpoints/} for more information about MUI's responsive breakpoints.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectorSize?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "selectorSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#shrink:member",
              "docComment": "/**\n * A boolean value that specifies whether or not to shrink the selector and phone number input components' labels. See {@link https://mui.com/material-ui/react-text-field/#shrink} for more information.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shrink?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "shrink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#stackProps:member",
              "docComment": "/**\n * Props passed to the MUI Stack component if the country code components are wrapped in one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stackProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StackProps",
                  "canonicalReference": "@mui/material!StackProps:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "stackProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#value:member",
              "docComment": "/**\n * Variable holding the value of the phone number input field. Provide this when you wish to use the component as a controlled component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps#variant:member",
              "docComment": "/**\n * Defines which variant of the MUI TextField is used in the country code selector and phone number input components. See {@link https://mui.com/material-ui/react-text-field/#basic-textfield} about the TextField variants.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variant?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextFieldVariants",
                  "canonicalReference": "@mui/material!TextFieldVariants:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "variant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!CCSelectorProps:interface",
          "docComment": "/**\n * Represents the props of the `CountryCodeSelector` components.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface CCSelectorProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AutocompleteProps",
              "canonicalReference": "@mui/material!AutocompleteProps:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CountryType",
              "canonicalReference": "mui-country-code-selector!CountryType:interface"
            },
            {
              "kind": "Content",
              "text": ", false, false, false, 'div'>, 'onChange' | 'options' | 'renderInput' | 'value'>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "component/types/CCSelectorProps.ts",
          "releaseTag": "Alpha",
          "name": "CCSelectorProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorProps#label:member",
              "docComment": "/**\n * Sets the `label` string on underlying MUI AutoComplete component's TextField component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorProps#renderCountRef:member",
              "docComment": "/**\n * Passes a numeric React ref object to the selector component, which is then increased by one every time the component is rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderCountRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "MutableRefObject",
                  "canonicalReference": "@types/react!React.MutableRefObject:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "renderCountRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorProps#renderInput:member",
              "docComment": "/**\n * A function for rendering the input element, that is passed to the underlying MUI Autocomplete component. See {@link https://mui.com/material-ui/api/autocomplete/#autocomplete-prop-renderInput} for more information about MUI's Autocomplete's `renderInput` prop.\n *\n * @returns The input element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderInput?: "
                },
                {
                  "kind": "Content",
                  "text": "(params: "
                },
                {
                  "kind": "Reference",
                  "text": "AutocompleteRenderInputParams",
                  "canonicalReference": "@mui/material!AutocompleteRenderInputParams:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "renderInput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorProps#shrink:member",
              "docComment": "/**\n * A boolean value that specifies whether or not to shrink the selector and phone number input components' labels. See {@link https://mui.com/material-ui/react-text-field/#shrink} for more information.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shrink?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "shrink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorProps#variant:member",
              "docComment": "/**\n * Defines which variant of the Autocomplete's TextField component is used. See {@link https://mui.com/material-ui/react-text-field/#basic-textfield} about the TextField's variants.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variant?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextFieldVariants",
                  "canonicalReference": "@mui/material!TextFieldVariants:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "variant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!CCSelectorState:interface",
          "docComment": "/**\n * Represents a common state between the country code autocomplete component and the phone number input component, which together form a complete phone number input component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface CCSelectorState "
            }
          ],
          "fileUrlPath": "component/types/CCSelectorState.ts",
          "releaseTag": "Alpha",
          "name": "CCSelectorState",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#applyStateChanges:member",
              "docComment": "/**\n * Applies the state changes to outside variables using the changeHandler function (controlled mode) or the reference to the phone number input DOM element.\n *\n * Parameters:\n *\n * `state` - The partial state object containing the changes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "applyStateChanges: "
                },
                {
                  "kind": "Content",
                  "text": "(state: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CCSelectorState",
                  "canonicalReference": "mui-country-code-selector!CCSelectorState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "applyStateChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#changeHandler:member",
              "docComment": "/**\n * An external change handler function to which the current phone number value is forwarded every time the value changes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeHandler: "
                },
                {
                  "kind": "Content",
                  "text": "((event: {\n        target: {\n            value: string;\n        };\n    }) => void) | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "changeHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#cleanUp:member",
              "docComment": "/**\n * The cleanup function which is executed when the component unmounts. Removes the reset event listener added to the form DOM element. Is returned by the `initialize` function.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cleanUp: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "cleanUp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#clearedRerender:member",
              "docComment": "/**\n * The state variable `clearedRerender` is used for triggering a rerender of the component after the phone number input has been cleared and the component has lost focus. The rerender is needed for getting the MUI TextField's label to enlarge back to it's initial state. It is important that the value is subscribed to in the `useCountryCodeStore` for it to be able to trigger the rerender. The value is toggled by the blur handler when the input has been cleared and the element loses the focus.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearedRerender: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "clearedRerender",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#clearErrorMsg:member",
              "docComment": "/**\n * Clears the errorMsg state variable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearErrorMsg: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "clearErrorMsg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#countryCodeDigits:member",
              "docComment": "/**\n * The digits of the detected country code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countryCodeDigits: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "countryCodeDigits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#countryCodeValue:member",
              "docComment": "/**\n * The `CountryType` object corresponding to the selected country code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countryCodeValue: "
                },
                {
                  "kind": "Reference",
                  "text": "CountryType",
                  "canonicalReference": "mui-country-code-selector!CountryType:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "countryCodeValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#defaultValue:member",
              "docComment": "/**\n * A default phone number value. Used when the component is used as an uncontrolled component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultValue: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "defaultValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#displayError:member",
              "docComment": "/**\n * Displays the error message for the time of the delay.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displayError: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "displayError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#errorHandler:member",
              "docComment": "/**\n * An external error handler function to which the error message is forwarded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorHandler: "
                },
                {
                  "kind": "Content",
                  "text": "((error: string) => void) | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "errorHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#errorMsg:member",
              "docComment": "/**\n * Error message to be shown to the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMsg: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "errorMsg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#errorMsgDelay:member",
              "docComment": "/**\n * Time of the message delay in seconds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMsgDelay: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "errorMsgDelay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#errorMsgTimeoutObj:member",
              "docComment": "/**\n * `Timeout` object for timing how long the error message is displayed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMsgTimeoutObj: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeJS.Timeout",
                  "canonicalReference": "!\"\\\"timers\\\"\".__global.NodeJS.Timeout:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "errorMsgTimeoutObj",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#formElement:member",
              "docComment": "/**\n * A form DOM element that is parent of the phone number input component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formElement: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "formElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#handleCountryCodeChange:member",
              "docComment": "/**\n * A handler function for the `CountryCodeSelector`'s change events. See {@link https://mui.com/material-ui/api/autocomplete/#autocomplete-prop-onChange} for more information about the function parameters.\n *\n * Parameters:\n *\n * `e` - The event source of the callback.\n *\n * `value` - The new value of the component.\n *\n * `reason` - One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handleCountryCodeChange: "
                },
                {
                  "kind": "Content",
                  "text": "(_event: unknown, value: "
                },
                {
                  "kind": "Reference",
                  "text": "CountryType",
                  "canonicalReference": "mui-country-code-selector!CountryType:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null, reason: "
                },
                {
                  "kind": "Reference",
                  "text": "AutocompleteChangeReason",
                  "canonicalReference": "@mui/base!AutocompleteChangeReason:type"
                },
                {
                  "kind": "Content",
                  "text": ", details?: "
                },
                {
                  "kind": "Reference",
                  "text": "AutocompleteChangeDetails",
                  "canonicalReference": "@mui/base!AutocompleteChangeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CountryType",
                  "canonicalReference": "mui-country-code-selector!CountryType:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | undefined) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "handleCountryCodeChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#handlePhoneNumberChange:member",
              "docComment": "/**\n * A handler function for the phone number input's change events. Takes care of detecting the country code from the input and setting the `countryCodeDigits` and the `countryCodeVal` based on that.\n *\n * Parameters:\n *\n * `event` - The change event object from the phone number input.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handlePhoneNumberChange: "
                },
                {
                  "kind": "Content",
                  "text": "(event: {\n        target: {\n            value: string;\n        };\n    }) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "handlePhoneNumberChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#handleValueChange:member",
              "docComment": "/**\n * Handles changes to the value prop. This should be called from a useEffect hook in the component's body.\n *\n * When the component is used as a controlled component the value of the phone number input element can be set (is controlled) from the outside. If the value is changed directly (in contrast to changing it in the onChange() handler function), this change must be handled using the handlePhoneNumberChange() function so that the change is also taken into account in the country code selector's value.\n *\n * Parameters:\n *\n * `value` - The value prop of a controlled component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handleValueChange: "
                },
                {
                  "kind": "Content",
                  "text": "(value: string | null | undefined) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "handleValueChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#initialize:member",
              "docComment": "/**\n * Initializes the component and returns a cleanup function. This, or the individual setter and cleanup functions, must be called in a `useEffect` hook in the component body. Provides an easy way to take care of the initialization and the cleanup.\n *\n * Parameters:\n *\n * `errorMsgDelay` - Time the error message is displayed in seconds.\n *\n * `errorHandler` - An external error handler function to which the error message is forwarded to.\n *\n * `changeHandler` - An external change handler function to which the current phone number value is forwared every time the value changes.\n *\n * @returns A cleanup function that removes the reset event handler from the form element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize: "
                },
                {
                  "kind": "Content",
                  "text": "(errorMsgDelay?: number, errorHandler?: ((error: string) => void) | undefined, changeHandler?: ((event: {\n        target: {\n            value: string;\n        };\n    }) => void) | undefined) => () => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "initialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#inputSelection:member",
              "docComment": "/**\n * The start and end indices of the selected text within the phone number input.\n *\n * React keeps track of the cursor position and selection of the controlled input elements. In some situations, however, React doesn't know where to place the cursor. For example, when an input does not get accepted by the onChange handler and the value is not changed, React places the cursor at the end of the value string. Only remedy to this seems to be to keep track of the cursor position internally, within the application.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputSelection: "
                },
                {
                  "kind": "Reference",
                  "text": "InputSelection",
                  "canonicalReference": "mui-country-code-selector!InputSelection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "inputSelection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#phoneNumberInput:member",
              "docComment": "/**\n * The phone number input DOM element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "phoneNumberInput: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLInputElement",
                  "canonicalReference": "!HTMLInputElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "phoneNumberInput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#phoneNumSplit:member",
              "docComment": "/**\n * An index indicating where the local part of the phone number starts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "phoneNumSplit: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "phoneNumSplit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#phoneNumStr:member",
              "docComment": "/**\n * The whole phone number including the country code as a string. This is the value of the phone number input element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "phoneNumStr: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "phoneNumStr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#placeInputSelection:member",
              "docComment": "/**\n * Places the cursor (more specifically the start and end indices of the text selection) within the phone number input element according to the `inputSelection` state variable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "placeInputSelection: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "placeInputSelection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#possibleCountries:member",
              "docComment": "/**\n * Data on country codes that are possible based on the `phoneNumStr`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "possibleCountries: "
                },
                {
                  "kind": "Reference",
                  "text": "PossibleCountries",
                  "canonicalReference": "mui-country-code-selector!PossibleCountries:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "possibleCountries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#setChangeHandler:member",
              "docComment": "/**\n * Sets a change handler function that is run with the current phone number value every time the value changes. This is used e.g., in the combined selector components (`CountryCodeSelectorCombinedZustand` and `CountryCodeSelectorCombinedReact`) to update the value prop when the component is used as a controlled component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setChangeHandler: "
                },
                {
                  "kind": "Content",
                  "text": "(handler: ((event: {\n        target: {\n            value: string;\n        };\n    }) => void) | undefined) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "setChangeHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#setErrorMsgDelay:member",
              "docComment": "/**\n * Sets the error message delay (how long the message is shown). Takes the delay in seconds as parameter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setErrorMsgDelay: "
                },
                {
                  "kind": "Content",
                  "text": "(seconds: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "setErrorMsgDelay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#setInputSelection:member",
              "docComment": "/**\n * Sets the `inputSelection` state variable. Takes an object containing the start and end indices of the text selection within the phone number input element as paramter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setInputSelection: "
                },
                {
                  "kind": "Content",
                  "text": "(inputSelection: "
                },
                {
                  "kind": "Reference",
                  "text": "InputSelection",
                  "canonicalReference": "mui-country-code-selector!InputSelection:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "setInputSelection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#setPhoneNumberInput:member",
              "docComment": "/**\n * Sets the `phoneNumberInput` value. Takes the phone number input DOM element as parameter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setPhoneNumberInput: "
                },
                {
                  "kind": "Content",
                  "text": "(inputElement: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLInputElement",
                  "canonicalReference": "!HTMLInputElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined | null) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "setPhoneNumberInput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#setRefs:member",
              "docComment": "/**\n * Sets references to the phone number input DOM element. Adds also some event handlers and initializes the phone number input with the default value when used as an uncontrolled component.\n *\n * Parameters:\n *\n * `element` - the phone number input DOM element,\n *\n * `inputRef` - a React MutableRef object (this can be used to access the value of the component when used as an uncontrolled component), and\n *\n * `defaultValue` - the default value for the phone number input when used as an uncontrolled component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRefs: "
                },
                {
                  "kind": "Content",
                  "text": "(element: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLInputElement",
                  "canonicalReference": "!HTMLInputElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null, inputRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "MutableRefObject",
                  "canonicalReference": "@types/react!React.MutableRefObject:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLInputElement",
                  "canonicalReference": "!HTMLInputElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null>, defaultValue?: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "setRefs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#significantDigits:member",
              "docComment": "/**\n * The digits of the phone number that are significant in terms of the country code. Contains only the digits without visual separator characters or the plus sign.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "significantDigits: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "significantDigits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CCSelectorState#toggleClearedRerender:member",
              "docComment": "/**\n * Toggles the `clearedRerender` state variable\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleClearedRerender: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "toggleClearedRerender",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!ComponentSize:interface",
          "docComment": "/**\n * Represents a value for the combined component props that change the size of country code selector subcomponents in a MUI Grid (or Grid2).\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ComponentSize "
            }
          ],
          "fileUrlPath": "component/types/ComponentSize.ts",
          "releaseTag": "Alpha",
          "name": "ComponentSize",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!ComponentSize#lg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lg?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "GridSize",
                  "canonicalReference": "@mui/material!GridSize:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "lg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!ComponentSize#md:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "md?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "GridSize",
                  "canonicalReference": "@mui/material!GridSize:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "md",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!ComponentSize#sm:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sm?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "GridSize",
                  "canonicalReference": "@mui/material!GridSize:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "sm",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!ComponentSize#xl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xl?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "GridSize",
                  "canonicalReference": "@mui/material!GridSize:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "xl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!ComponentSize#xs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xs?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "GridSize",
                  "canonicalReference": "@mui/material!GridSize:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "xs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "mui-country-code-selector!countries:var",
          "docComment": "/**\n * International calling code data for the countries of the world.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "countries: "
            },
            {
              "kind": "Content",
              "text": "readonly "
            },
            {
              "kind": "Reference",
              "text": "CountryType",
              "canonicalReference": "mui-country-code-selector!CountryType:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            }
          ],
          "fileUrlPath": "component/lib/countryCodeData.ts",
          "isReadonly": true,
          "releaseTag": "Alpha",
          "name": "countries",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!CountryCodeSelector:function(1)",
          "docComment": "/**\n * Autocomplete component to select the country code of a phone number from a list of countries. Based on the MUI Autocomplete component ( {@link https://mui.com/material-ui/react-autocomplete}). Can be used in conjunction with a text input field and common state between the subcomponents to create a complete phone number input component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function CountryCodeSelector({ autoHighlight, autoSelect, filterOptions, getOptionLabel, handleHomeEndKeys, label, renderOption, renderInput, shrink, variant, renderCountRef, ...rest }: "
            },
            {
              "kind": "Reference",
              "text": "CCSelectorProps",
              "canonicalReference": "mui-country-code-selector!CCSelectorProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelector/CountryCodeSelectorZustand.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ autoHighlight, autoSelect, filterOptions, getOptionLabel, handleHomeEndKeys, label, renderOption, renderInput, shrink, variant, renderCountRef, ...rest }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "CountryCodeSelector"
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!CountryCodeSelectorCombined:function(1)",
          "docComment": "/**\n * A complete phone number input React component with a country code selector autocomplete field. Based on MUI's `Autocomplete` ( {@link https://mui.com/material-ui/react-autocomplete/}) and `TextField` ( {@link https://mui.com/material-ui/react-text-field/}) components. These subcomponents are combined using a common state that is implemented differently in specific variants of the component.\n *\n * This component variant uses the provided Zustand store as the common state between the subcomponents. See the documentation for `CCSelectorState` and `useCountryCodeStore` for more information about the store.\n *\n * @returns A complete phone number input React component with a country code selector autocomplete field.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function CountryCodeSelectorCombined({ id, name, value, onChange, inputRef, countryCodeLabel, phoneNumberLabel, errorMessageDelay, errorMessageDisplay, onError, defaultValue, layout, formGroupProps, gridContainerProps, gridItemProps, gridSelectorProps, gridInputProps, gridErrorProps, grid2ContainerProps, grid2ItemProps, grid2SelectorProps, grid2InputProps, grid2ErrorProps, stackProps, selectorSize, inputSize, errorSize, filterOptions, shrink, variant, selectorProps, inputProps, errorProps, selectorRenderCountRef, inputRenderCountRef, }: "
            },
            {
              "kind": "Reference",
              "text": "CCSelectorCombinedProps",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelectorCombined/CountryCodeSelectorCombinedZustand/index.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ id, name, value, onChange, inputRef, countryCodeLabel, phoneNumberLabel, errorMessageDelay, errorMessageDisplay, onError, defaultValue, layout, formGroupProps, gridContainerProps, gridItemProps, gridSelectorProps, gridInputProps, gridErrorProps, grid2ContainerProps, grid2ItemProps, grid2SelectorProps, grid2InputProps, grid2ErrorProps, stackProps, selectorSize, inputSize, errorSize, filterOptions, shrink, variant, selectorProps, inputProps, errorProps, selectorRenderCountRef, inputRenderCountRef, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "CountryCodeSelectorCombined"
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!CountryCodeSelectorCombinedReact:function(1)",
          "docComment": "/**\n * A complete phone number input React component with a country code selector autocomplete field. Based on MUI's `Autocomplete` ( {@link https://mui.com/material-ui/react-autocomplete/}) and `TextField` ( {@link https://mui.com/material-ui/react-text-field/}) components. These subcomponents are combined using a common state that is implemented differently in specific variants of the component.\n *\n * This component variant uses React's state management utilities to create the common state between the subcomponents.\n *\n * @returns A complete phone number input React component with a country code selector autocomplete field.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default function CountryCodeSelectorCombinedReact({ id, name, value, onChange, countryCodeLabel, phoneNumberLabel, errorMessageDelay, errorMessageDisplay, onError, inputRef, defaultValue, layout, formGroupProps, gridContainerProps, gridItemProps, gridSelectorProps, gridInputProps, gridErrorProps, grid2ContainerProps, grid2ItemProps, grid2SelectorProps, grid2InputProps, grid2ErrorProps, stackProps, selectorSize, inputSize, errorSize, filterOptions, shrink, variant, selectorProps, inputProps, errorProps, selectorRenderCountRef, inputRenderCountRef, }: "
            },
            {
              "kind": "Reference",
              "text": "CCSelectorCombinedProps",
              "canonicalReference": "mui-country-code-selector!CCSelectorCombinedProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelectorCombined/CountryCodeSelectorCombinedReact.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ id, name, value, onChange, countryCodeLabel, phoneNumberLabel, errorMessageDelay, errorMessageDisplay, onError, inputRef, defaultValue, layout, formGroupProps, gridContainerProps, gridItemProps, gridSelectorProps, gridInputProps, gridErrorProps, grid2ContainerProps, grid2ItemProps, grid2SelectorProps, grid2InputProps, grid2ErrorProps, stackProps, selectorSize, inputSize, errorSize, filterOptions, shrink, variant, selectorProps, inputProps, errorProps, selectorRenderCountRef, inputRenderCountRef, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "CountryCodeSelectorCombinedReact"
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!CountryCodeStoreProvider:function(1)",
          "docComment": "/**\n * A provider component for the `CountryCodeStoreContext`. Every country code selector must have its own state. When creating a custom component that uses Zustand store for the state, the components of the phone number input must be surrounded in `CountryCodeStoreProvider` tags. The combined Zustand component hides this by using a higher order component.\n *\n * @param param0 - Children of the provider component in an object.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function CountryCodeStoreProvider({ children }: "
            },
            {
              "kind": "Content",
              "text": "{\n    children: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/store/CountryCodeStoreProvider.tsx",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "CountryCodeStoreProvider"
        },
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!CountryType:interface",
          "docComment": "/**\n * Represents data for an individual country. Contains records for the name, the international calling code, and two letter ISO 3166 country code of the country.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CountryType "
            }
          ],
          "fileUrlPath": "component/lib/countryCodeData.ts",
          "releaseTag": "Alpha",
          "name": "CountryType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CountryType#code:member",
              "docComment": "/**\n * International calling code of the country.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CountryType#country:member",
              "docComment": "/**\n * Name of the country.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "country: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "country",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!CountryType#iso:member",
              "docComment": "/**\n * Two letter ISO 3166 country code of the country. See {@link https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes} for more information.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iso: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "iso",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!createDefaultFilterOptions:function(1)",
          "docComment": "/**\n * Creates a default filter options function for the `CountryCodeSelector`'s `Autocomplete` component. See {@link https://mui.com/material-ui/api/autocomplete/#autocomplete-prop-filterOptions} and {@link https://mui.com/material-ui/react-autocomplete/#custom-filter} for more information about custom filtering.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createDefaultFilterOptions(): "
            },
            {
              "kind": "Content",
              "text": "(options: "
            },
            {
              "kind": "Reference",
              "text": "CountryType",
              "canonicalReference": "mui-country-code-selector!CountryType:interface"
            },
            {
              "kind": "Content",
              "text": "[], state: import('@mui/material')."
            },
            {
              "kind": "Reference",
              "text": "FilterOptionsState",
              "canonicalReference": "@mui/base!FilterOptionsState:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CountryType",
              "canonicalReference": "mui-country-code-selector!CountryType:interface"
            },
            {
              "kind": "Content",
              "text": ">) => "
            },
            {
              "kind": "Reference",
              "text": "CountryType",
              "canonicalReference": "mui-country-code-selector!CountryType:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelector/common.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [],
          "name": "createDefaultFilterOptions"
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!createDefaultRenderInput:function(1)",
          "docComment": "/**\n * Returns a default function for rendering the input component of the `CountryCodeSelector`'s `Autocomplete` component. See {@link https://mui.com/material-ui/api/autocomplete/#autocomplete-prop-renderInput} for more information about the `renderInput` prop.\n *\n * @param label - CountryCodeSelector component's label passed to the input component.\n *\n * @param shrink - Indicates whether to shrink the label or not.\n *\n * @param variant - Variant of the `TextField` component to use.\n *\n * @returns A function for rendering the input component of the `CountryCodeSelector`'s `Autocomplete` component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createDefaultRenderInput(label: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", shrink?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", variant?: "
            },
            {
              "kind": "Reference",
              "text": "TextFieldVariants",
              "canonicalReference": "@mui/material!TextFieldVariants:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(params: "
            },
            {
              "kind": "Reference",
              "text": "AutocompleteRenderInputParams",
              "canonicalReference": "@mui/material!AutocompleteRenderInputParams:interface"
            },
            {
              "kind": "Content",
              "text": ") => import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelector/common.tsx",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "label",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "shrink",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "variant",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "createDefaultRenderInput"
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!defaultGetOptionLabel:function(1)",
          "docComment": "/**\n * A default function for getting the option label string in the `CountryCodeSelector`'s `Autocomplete` component. See {@link https://mui.com/material-ui/api/autocomplete/#autocomplete-prop-getOptionLabel} for more information about the `getOptionLabel` prop.\n *\n * @param option - The option for which the string is to be formed.\n *\n * @returns The option label string.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defaultGetOptionLabel(option: "
            },
            {
              "kind": "Reference",
              "text": "CountryType",
              "canonicalReference": "mui-country-code-selector!CountryType:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelector/common.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "option",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "defaultGetOptionLabel"
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!defaultRenderOption:function(1)",
          "docComment": "/**\n * Default function for rendering the options in the `CountryCodeSelector`'s `Autocomplete` component. See {@link https://mui.com/material-ui/api/autocomplete/#autocomplete-prop-renderOption} for more information about the `renderOption` prop.\n *\n * @param props - The props to apply on the `li` element.\n *\n * @param option - The option to render.\n *\n * @returns The option element.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defaultRenderOption(props: "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLLIElement",
              "canonicalReference": "!HTMLLIElement:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", option: "
            },
            {
              "kind": "Reference",
              "text": "CountryType",
              "canonicalReference": "mui-country-code-selector!CountryType:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "React.ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelector/common.tsx",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "option",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "name": "defaultRenderOption"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mui-country-code-selector!Grid2ContainerProps:type",
          "docComment": "/**\n * Represents the props that can be passed to a MUI Grid2 container component used for the layout of the subcomponents of combined country code selector component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Grid2ContainerProps = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Grid2Props",
              "canonicalReference": "@mui/material!Grid2Props:type"
            },
            {
              "kind": "Content",
              "text": ", 'xs' | 'sm' | 'md' | 'lg' | 'xl'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/types/GridProps.ts",
          "releaseTag": "Alpha",
          "name": "Grid2ContainerProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type",
          "docComment": "/**\n * Represents the props that can be passed to a MUI Grid2 item components used for the layout of the subcomponents of combined country code selector component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Grid2ItemProps = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Grid2Props",
              "canonicalReference": "@mui/material!Grid2Props:type"
            },
            {
              "kind": "Content",
              "text": ", 'spacing' | 'rowSpacing' | 'columnSpacing'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/types/GridProps.ts",
          "releaseTag": "Alpha",
          "name": "Grid2ItemProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!Grid2Wrapper:function(1)",
          "docComment": "/**\n * Wraps the combined country code selector's subcomponents into a MUI `Grid2` components.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default function Grid2Wrapper({ grid2ItemProps, grid2SelectorProps, grid2InputProps, grid2ErrorProps, selectorSize, inputSize, errorSize, children, }: "
            },
            {
              "kind": "Reference",
              "text": "Grid2WrapperProps",
              "canonicalReference": "mui-country-code-selector!Grid2WrapperProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelectorCombined/Wrapper/Grid2Wrapper.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ grid2ItemProps, grid2SelectorProps, grid2InputProps, grid2ErrorProps, selectorSize, inputSize, errorSize, children, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "Grid2Wrapper"
        },
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!Grid2WrapperProps:interface",
          "docComment": "/**\n * Represents the props of the `Grid2Wrapper` component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Grid2WrapperProps "
            }
          ],
          "fileUrlPath": "component/CountryCodeSelectorCombined/Wrapper/Grid2Wrapper.tsx",
          "releaseTag": "Alpha",
          "name": "Grid2WrapperProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!Grid2WrapperProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!Grid2WrapperProps#errorSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorSize: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "errorSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!Grid2WrapperProps#grid2ErrorProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2ErrorProps: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "grid2ErrorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!Grid2WrapperProps#grid2InputProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2InputProps: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "grid2InputProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!Grid2WrapperProps#grid2ItemProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2ItemProps: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "grid2ItemProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!Grid2WrapperProps#grid2SelectorProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2SelectorProps: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "grid2SelectorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!Grid2WrapperProps#inputSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputSize: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "inputSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!Grid2WrapperProps#selectorSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectorSize: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "selectorSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mui-country-code-selector!GridContainerProps:type",
          "docComment": "/**\n * Represents the props that can be passed to a MUI Grid container component used for the layout of the subcomponents of combined country code selector component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GridContainerProps = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GridProps",
              "canonicalReference": "@mui/material!GridProps:type"
            },
            {
              "kind": "Content",
              "text": ", 'xs' | 'sm' | 'md' | 'lg' | 'xl'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/types/GridProps.ts",
          "releaseTag": "Alpha",
          "name": "GridContainerProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mui-country-code-selector!GridItemProps:type",
          "docComment": "/**\n * Represents the props that can be passed to a MUI Grid item components used for the layout of the subcomponents of combined country code selector component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GridItemProps = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GridProps",
              "canonicalReference": "@mui/material!GridProps:type"
            },
            {
              "kind": "Content",
              "text": ", 'spacing' | 'rowSpacing' | 'columnSpacing'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/types/GridProps.ts",
          "releaseTag": "Alpha",
          "name": "GridItemProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!GridWrapper:function(1)",
          "docComment": "/**\n * Wraps the combined country code selector's subcomponents into a MUI `Grid` and `Grid item`components.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default function GridWrapper({ gridItemProps, gridSelectorProps, gridInputProps, gridErrorProps, selectorSize, inputSize, errorSize, children, }: "
            },
            {
              "kind": "Reference",
              "text": "GridWrapperProps",
              "canonicalReference": "mui-country-code-selector!GridWrapperProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelectorCombined/Wrapper/GridWrapper.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ gridItemProps, gridSelectorProps, gridInputProps, gridErrorProps, selectorSize, inputSize, errorSize, children, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "GridWrapper"
        },
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!GridWrapperProps:interface",
          "docComment": "/**\n * Represents the props of the `GridWrapper` component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridWrapperProps "
            }
          ],
          "fileUrlPath": "component/CountryCodeSelectorCombined/Wrapper/GridWrapper.tsx",
          "releaseTag": "Alpha",
          "name": "GridWrapperProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!GridWrapperProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!GridWrapperProps#errorSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorSize: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "errorSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!GridWrapperProps#gridErrorProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridErrorProps: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "gridErrorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!GridWrapperProps#gridInputProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridInputProps: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "gridInputProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!GridWrapperProps#gridItemProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridItemProps: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "gridItemProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!GridWrapperProps#gridSelectorProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridSelectorProps: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "gridSelectorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!GridWrapperProps#inputSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputSize: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "inputSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!GridWrapperProps#selectorSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectorSize: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "selectorSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!InputSelection:interface",
          "docComment": "/**\n * Represents the text selection range within an input element (phone number input).\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface InputSelection "
            }
          ],
          "fileUrlPath": "component/types/InputSelection.ts",
          "releaseTag": "Alpha",
          "name": "InputSelection",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!InputSelection#selectionEnd:member",
              "docComment": "/**\n * The end index of the text selection within the input element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionEnd: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "selectionEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!InputSelection#selectionStart:member",
              "docComment": "/**\n * The start index of the text selection within the input element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionStart: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "selectionStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mui-country-code-selector!LayoutProp:type",
          "docComment": "/**\n * Represents a value of the `CombinedCountryCodeSelector`'s prop that defines what kind of layout components its subcomponents are wrapped in, if any.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type LayoutProp = "
            },
            {
              "kind": "Content",
              "text": "'grid' | 'gridItems' | 'grid2' | 'grid2Items' | 'stack' | 'group' | 'row'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/types/LayoutProp.ts",
          "releaseTag": "Alpha",
          "name": "LayoutProp",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!PossibleCountries:interface",
          "docComment": "/**\n * Represents data about country codes that are possible based on the phone number input.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface PossibleCountries "
            }
          ],
          "fileUrlPath": "component/types/PossibleCountries.ts",
          "releaseTag": "Alpha",
          "name": "PossibleCountries",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!PossibleCountries#digitsConsidered:member",
              "docComment": "/**\n * Digits that were considered when selecting the codes in the possible countries array.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "digitsConsidered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "digitsConsidered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!PossibleCountries#maxCodeDigits:member",
              "docComment": "/**\n * The maximum number of digits in the codes in the possibleCountries array.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxCodeDigits: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "maxCodeDigits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!PossibleCountries#minCodeDigits:member",
              "docComment": "/**\n * The minimum number of digits in the codes in the possibleCountries array.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minCodeDigits: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "minCodeDigits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!PossibleCountries#possibleCountries:member",
              "docComment": "/**\n * Array of `CountryType` objects corresponding to the possible country codes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "possibleCountries: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "CountryType",
                  "canonicalReference": "mui-country-code-selector!CountryType:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "possibleCountries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!useCountryCodeStore:function(1)",
          "docComment": "/**\n * A custom hook that returns a country code store. Store is fetched from a React context and therefore the component using this hook is expected to be surrounded by `CountryCodeStoreProvider` tags.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useCountryCodeStore: () => "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CCSelectorState",
              "canonicalReference": "mui-country-code-selector!CCSelectorState:interface"
            },
            {
              "kind": "Content",
              "text": ", 'phoneNumStr' | 'countryCodeValue' | 'errorMsg' | 'errorMsgDelay' | 'errorMsgTimeoutObj' | 'phoneNumberInput' | 'clearedRerender' | 'setPhoneNumberInput' | 'setRefs' | 'initialize' | 'cleanUp' | 'handlePhoneNumberChange' | 'handleCountryCodeChange' | 'handleValueChange' | 'placeInputSelection'>"
            }
          ],
          "fileUrlPath": "component/store/useCountryCodeStore.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useCountryCodeStore"
        },
        {
          "kind": "Function",
          "canonicalReference": "mui-country-code-selector!Wrapper:function(1)",
          "docComment": "/**\n * Wraps the combined country code selector's subcomponents into MUI's `Grid`, `Grid2` or `FormGroup` components according to the `layout` prop's value.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default function Wrapper({ layout, formGroupProps, gridContainerProps, gridItemProps, gridSelectorProps, gridInputProps, gridErrorProps, grid2ContainerProps, grid2ItemProps, grid2SelectorProps, grid2InputProps, grid2ErrorProps, stackProps, selectorSize, inputSize, errorSize, children, }: "
            },
            {
              "kind": "Reference",
              "text": "WrapperProps",
              "canonicalReference": "mui-country-code-selector!WrapperProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "component/CountryCodeSelectorCombined/Wrapper/index.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Alpha",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ layout, formGroupProps, gridContainerProps, gridItemProps, gridSelectorProps, gridInputProps, gridErrorProps, grid2ContainerProps, grid2ItemProps, grid2SelectorProps, grid2InputProps, grid2ErrorProps, stackProps, selectorSize, inputSize, errorSize, children, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "Wrapper"
        },
        {
          "kind": "Interface",
          "canonicalReference": "mui-country-code-selector!WrapperProps:interface",
          "docComment": "/**\n * Props for the `Wrapper` component.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface WrapperProps "
            }
          ],
          "fileUrlPath": "component/CountryCodeSelectorCombined/Wrapper/index.tsx",
          "releaseTag": "Alpha",
          "name": "WrapperProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#errorSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorSize?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "errorSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#formGroupProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formGroupProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FormGroupProps",
                  "canonicalReference": "@mui/material!FormGroupProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "formGroupProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#grid2ContainerProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2ContainerProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ContainerProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ContainerProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2ContainerProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#grid2ErrorProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2ErrorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2ErrorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#grid2InputProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2InputProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2InputProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#grid2ItemProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2ItemProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2ItemProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#grid2SelectorProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grid2SelectorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Grid2ItemProps",
                  "canonicalReference": "mui-country-code-selector!Grid2ItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "grid2SelectorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#gridContainerProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridContainerProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridContainerProps",
                  "canonicalReference": "mui-country-code-selector!GridContainerProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridContainerProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#gridErrorProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridErrorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridErrorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#gridInputProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridInputProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridInputProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#gridItemProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridItemProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridItemProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#gridSelectorProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridSelectorProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridItemProps",
                  "canonicalReference": "mui-country-code-selector!GridItemProps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "gridSelectorProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#inputSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputSize?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "inputSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#layout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layout?: "
                },
                {
                  "kind": "Reference",
                  "text": "LayoutProp",
                  "canonicalReference": "mui-country-code-selector!LayoutProp:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "layout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#selectorSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectorSize?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentSize",
                  "canonicalReference": "mui-country-code-selector!ComponentSize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "selectorSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mui-country-code-selector!WrapperProps#stackProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stackProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StackProps",
                  "canonicalReference": "@mui/material!StackProps:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Alpha",
              "name": "stackProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
